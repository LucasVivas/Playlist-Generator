swagger: '2.0'
info:
  description: Server Playlist-Generator
  version: 0.0.1
  title: Server Playlist-Generator
tags:
  - name: playlist
    description: Operations about playlist
schemes:
  - http
paths:
  /playlists:
    get:
      tags:
        - playlist
      summary: Get all the playlists
      description: Return a json list of all the playlists in the database.
      operationId: GetAllPlaylist
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Track'
    delete:
      tags:
        - playlist
      summary: Delete all playlists
      description: Delete every playlist in the database
      operationId: deleteAllUser
      responses:
        '200':
          description: successful operation.
  /playlist:
    post:
      tags:
        - playlist
      summary: Create playlist
      description: Add a new playlist in the database.
      operationId: createPlaylist
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: Created playlist object
          required: true
          schema:
            $ref: '#/definitions/Playlist'
      responses:
        '201':
          description: successful operation - the playlist is created.
        '409':
          description: Conflict - the playlist already exists.
  /playlist/{playlist_id}:
    get:
      tags:
        - playlist
      summary: Get a playlist
      description: Return a json object of the playlist.
      operationId: getPlaylist
      produces:
        - application/json
      parameters:
        - name: playlist_id
          in: path
          description: The playlist\'s ID where you want to find the track.
          required: true
          type: number
      responses:
        default:
          description: successful operation
          schema:
            $ref: '#/definitions/Playlist'
    post:
      tags:
        - playlist
      summary: Add a track to a playlist
      description: This can only be done if a playlist with the given name already exists.
      operationId: addTrack
      produces:
        - application/json
      parameters:
        - name: playlist_id
          in: path
          description: The playlist\'s ID where you want to find the track.
          required: true
          type: number
        - in: body
          name: body
          description: Updated track object
          required: true
          schema:
            $ref: '#/definitions/Track'
      responses:
        '200':
          description: successful operation
        '404':
          description: Playlist that needs to be updated is not found
        '409':
          description: Conflict - the track already exists into the playlist.
    put:
      tags:
        - playlist
      summary: Updated playlist
      description: This can only be done if a playlist with the given name already exists.
      operationId: updatePlaylist
      produces:
        - application/json
      parameters:
        - name: playlist_id
          in: path
          description: The playlist\'s ID where you want to find the track.
          required: true
          type: number
        - in: body
          name: body
          description: Updated playlist object
          required: true
          schema:
            $ref: '#/definitions/Playlist'
      responses:
        '200':
          description: successful operation.
        '404':
          description: User that needs to be deleted is not found.
        '409':
          description: Conflict - the playlist already exists.
    delete:
      tags:
        - playlist
      summary: Delete a playlist
      description: Delete a playlist
      operationId: deletePlaylist
      produces:
        - application/json
      parameters:
        - name: playlist_id
          in: path
          description: The playlist\'s ID where you want to find the track.
          required: true
          type: number
      responses:
        '200':
          description: successful operation.
        '404':
          description: User that needs to be deleted is not found
  /playlist/{playlist_id}/{track_id}:
    get:
      tags:
        - playlist
      summary: Get a track in a playlist
      description: Return a json object of a track in the playlist.
      operationId: getTrack
      produces:
        - application/json
      parameters:
        - name: playlist_id
          in: path
          description: The playlist\'s ID where you want to find the track.
          required: true
          type: number
        - name: track_id
          in: path
          description: The track\'s ID into the playlist.
          required: true
          type: number
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/Track'
        '404':
          description: The track\'s ID or playlist\'s ID not found or invalid.
    put:
      tags:
        - playlist
      summary: Updated a track in a playlist
      description: Update a track in the playlist.
      operationId: updateTrack
      produces:
        - application/json
      parameters:
        - name: playlist_id
          in: path
          description: The playlist\'s ID where you want to find the track.
          required: true
          type: number
        - name: track_id
          in: path
          description: The track\'s ID into the playlist.
          required: true
          type: number
        - in: body
          name: body
          description: Updated track.
          required: true
          schema:
            $ref: '#/definitions/Track'
      responses:
        '200':
          description: Successful operation.
        '404':
          description: The track\'s ID or playlist\'s ID not found or invalid.
        '409':
          description: Conflict - the track already exists.
    delete:
      tags:
        - playlist
      summary: Delete a track in a playlist
      description: Delete a track in a playlist.
      operationId: deleteTrack
      produces:
        - application/json
      parameters:
        - name: playlist_id
          in: path
          description: The playlist\'s ID where you want to find the track.
          required: true
          type: number
        - name: track_id
          in: path
          description: The track\'s ID into the playlist.
          required: true
          type: number
      responses:
        '200':
          description: Successful operation.
        '404':
          description: The track\'s ID or playlist\'s ID not found or invalid.
definitions:
  Track:
    type: object
    properties:
      id:
        type: integer
      spotify_id:
        type: string
  Playlist:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      description:
        type: string
      tracks:
        type: array
        items:
          $ref: '#/definitions/Track'
